<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanghao.dao.UserDao">
    <!--引入sql片段-->
    <sql id="user_feild">
        `id`,
        `username`,
        `password`,
        `email`
    </sql>

    <insert id="addUser" parameterType="user">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>

        INSERT INTO `user`
        (
        `username`,
        `password`,
        `email`
        )
        VALUES
        (
        #{username},
        #{password},
        #{email}
        );
    </insert>
    <delete id="delUser" parameterType="int">
        DELETE FROM `user`
        WHERE
        `id` = #{id} ;
    </delete>
    <select id="getUserById" parameterType="int" resultType="user">
        SELECT
        <include refid="user_feild"></include>
        FROM
        `user`
        WHERE `id` = #{id}
    </select>
    <select id="getUserByName" parameterType="String" resultType="user">
        SELECT
        <include refid="user_feild"></include>
        FROM
        `user`
        WHERE `username` LIKE #{name}
    </select>
    <select id="getUsersByNameAndEmail" parameterType="user" resultType="user">
        SELECT
        <include refid="user_feild"></include>
        FROM
        `user`
        <where>
            <if test="username != null">
                AND `username` = #{username}
            </if>
            <if test="email != null">
                AND `email` = #{email}
            </if>
        </where>
    </select>


    <resultMap id="user_resultMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="email" column="email"></result>
        <collection property="list" ofType="orders">
            <id property="id" column="oid"></id>
            <result property="product" column="product"></result>
            <result property="price" column="price"></result>
        </collection>
    </resultMap>
    <select id="getUserWithOrders" parameterType="int" resultMap="user_resultMap">
        SELECT
        u.`id`,
        u.`username`,
        u.`password`,
        u.`email`,
        o.`id` oid,
        o.`product`,
        o.`price`,
        o.`uid`
        FROM `user` u
        LEFT JOIN `orders` o
        ON u.id = o.uid;
    </select>

    <select id="getUsers" resultType="user">
        SELECT
        <include refid="user_feild"></include>
        FROM
        `user`
    </select>
    <update id="updateUser" parameterType="user">
        UPDATE `user`
        SET
        `id` = #{id},
        `username` = #{username} ,
        `password` = #{password} ,
        `email` = #{email}
        WHERE
        `id` = #{id}
    </update>
</mapper>